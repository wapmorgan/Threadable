#!/usr/bin/env php
<?php

use wapmorgan\Threadable\DownloadWorker;
use wapmorgan\Threadable\Worker;
use wapmorgan\Threadable\WorkersPool;
require_once __DIR__.'/../vendor/autoload.php';

function show_status(&$files)
{
    foreach ($files as $i => $file) {
        if (file_exists($file['target'])) {
            clearstatcache(true, $file['target']);
            $downloaded_size = filesize($file['target']);
            if ($downloaded_size == $file['size']) {
                echo $file['source'].' downloaded'.PHP_EOL;
                unset($files[$i]);
                unlink($file['target']);
            } else if ($downloaded_size === 0) {
                // echo $file[0].' in queue'.PHP_EOL;
            } else  {
                echo $file['source'].' downloading '.round($downloaded_size * 100 / $file['size'], 2).'%'.PHP_EOL;
            }
        }
    }
}

$file_sources = [/*'https://yandex.ru/images/today?size=1920x1080', */'http://hosting-obzo-ru.1gb.ru/hosting-obzor.ru.zip', 'http://soft.eurodir.ru/test-speed-100Mb.bin'];
$files = [];
foreach ($file_sources as $file_to_download) {
    $file_size = DownloadWorker::getRemoteFileSize($file_to_download);
    $output = tempnam(sys_get_temp_dir(), 'thrd_test');
    $files[] = [
        'source' => $file_to_download,
        'size' => $file_size,
        'target' => $output,
    ];
}

$pool = new WorkersPool('wapmorgan\Threadable\DownloadWorker');
$pool->setPoolSize(3);
foreach ($files as $file) {
    echo 'Enqueuing '.$file['source'].' with size '.$file['size'].PHP_EOL;
    $pool->sendData($file);
}

$pool->waitToFinish([
    '4' => function ($pool) use (&$files) {
        show_status($files);
    }]
);

foreach ($files as $file) {
	echo 'Checked '.$file['target'].': ';
	if (file_exists($file['target'])) {
		$actual_size = filesize($file['target']);
		if ($actual_size === $file['size'])
			echo 'is ok' . PHP_EOL;
		else
			echo 'downloaded ' . $actual_size . ' of ' . $file['size'] . ' bytes' . PHP_EOL;
		unlink($file['target']);
	} else {
		echo 'not downloaded'.PHP_EOL;
	}
}
