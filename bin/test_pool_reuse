#!/usr/bin/env php
<?php
use wapmorgan\Threadable\Worker;
use wapmorgan\Threadable\WorkersPool;
require_once __DIR__.'/../vendor/autoload.php';

class SimpleWorkerWithVariableDelay extends Worker
{
    public function onPayload($payload)
    {
        echo getmypid().' is sleeping for '.$payload['seconds'].' sec [iteration '.$payload['i'].']'.PHP_EOL;
        sleep($payload['seconds'] * 2);
        echo 'Waking up'.PHP_EOL;
    }
}

$pool = new WorkersPool('SimpleWorkerWithVariableDelay');
$pool->setPoolSize(1);
$pool->enableDataOverhead();

for ($i = 0; $i < 3; $i++)
    $pool->sendData(['seconds' => $i + 3, 'i' => $i]);

$pool->waitToFinish([
    '0.5' => function (WorkersPool $pool) {
        echo 'Microtime: '.microtime(true)."\t".'Running threads: '.$pool->countRunningWorkers().PHP_EOL;
    }
]);
