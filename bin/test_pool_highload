#!/usr/bin/env php
<?php
use wapmorgan\Threadable\Worker;
use wapmorgan\Threadable\WorkersPool;
require_once __DIR__.'/../vendor/autoload.php';

class CpuEatingWorker extends Worker
{
    public function onPayload($payload)
    {
        echo 'new iteration '.$payload['i'].PHP_EOL;
        $till = microtime(true) + 5;
        while (microtime(true) < $till) {

        }
    }
}

$pool = new WorkersPool('CpuEatingWorker');
$pool->setPoolSize(8);
$pool->enableDataOverhead();

for ($i = 0; $i < 12; $i++)
    $pool->sendData(['i' => $i]);

var_dump($pool->getOverheadCounters());

$pool->waitToFinish([
    '0.5' => function (WorkersPool $pool) {
        echo 'Microtime: '.microtime(true)."\t".'Running threads: '.$pool->countRunningWorkers().PHP_EOL;
    }
]);
echo $pool->countIdleWorkers().PHP_EOL;
echo 'Done'.PHP_EOL;
